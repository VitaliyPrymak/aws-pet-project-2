name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python manage.py test  # Run Django tests
          
  docker-build-and-push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set region us-east-1
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 021891587435.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t myapp-backend:latest -f backend_rds/Dockerfile .
          docker tag myapp-backend:latest 021891587435.dkr.ecr.us-east-1.amazonaws.com/myapp-backend:latest

      - name: Push to ECR
        run: |
          docker push 021891587435.dkr.ecr.us-east-1.amazonaws.com/myapp-backend:latest

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecs update-service --cluster my-cluster --service myapp-backend-service --force-new-deployment
